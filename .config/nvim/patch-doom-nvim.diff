diff --git a/lua/doom/core/settings/init.lua b/lua/doom/core/settings/init.lua
index ac95600..2523964 100644
--- a/lua/doom/core/settings/init.lua
+++ b/lua/doom/core/settings/init.lua
@@ -30,7 +30,7 @@ settings.load_default_options = function()
   vim.opt.inccommand = "split"
   vim.opt.path = "**"
   vim.opt.signcolumn = "auto:2-3"
-  vim.opt.foldcolumn = "auto:9"
+  -- vim.opt.foldcolumn = "auto:9"
 
   vim.opt.fillchars = {
     vert = "▕",
diff --git a/lua/doom/extras/keybindings/leader.lua b/lua/doom/extras/keybindings/leader.lua
index 7fd5b51..caeafb5 100644
--- a/lua/doom/extras/keybindings/leader.lua
+++ b/lua/doom/extras/keybindings/leader.lua
@@ -62,7 +62,7 @@ mappings.map(
 mappings.map(
   "n",
   "<leader>.",
-  "<cmd>Telescope file_browser<CR>",
+  "<cmd>Telescope file_browser hidden=true<CR>",
   opts,
   "Editor",
   "file_browser",
@@ -322,7 +322,7 @@ mappings.map(
 mappings.map(
   "n",
   "<leader>ff",
-  "<cmd>Telescope find_files<CR>",
+  "<cmd>Telescope find_files hidden=true<CR>",
   opts,
   "Editor",
   "find_files_alt",
@@ -592,7 +592,9 @@ if not config.doom.use_netrw then
   mappings.map(
     "n",
     "<leader>oe",
-    "<cmd>NvimTreeToggle<CR>",
+    "<cmd>lua toggle_tree()<cr>",
+    -- "<cmd>NvimTreeToggle<CR>",
+    -- "<cmd>NvimTreeToggle<CR>",
     opts,
     "Editor",
     "open_tree_alt",
@@ -856,3 +858,356 @@ mappings.map("n", "<leader>m", "<cmd>w<cr>", opts, "Save", "save_right", "Save m
 
 -- man pages
 mappings.map("n", "<leader>h", ":Man ", { silent = false }, "Man page", "man_page", "Man page")
+
+-- MINE
+mappings.map(
+  "n",
+  "<leader>op",
+  "<cmd>lua require'telescope'.extensions.project.project{ display_type = 'full' }<CR>",
+  opts,
+  "Editor",
+  "open_project",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>*",
+  "<cmd>lua my_open_tele()<cr>",
+  opts,
+  "Editor",
+  "search_word",
+  "Search word under cursor, raw"
+)
+mappings.map(
+  "n",
+  "<leader>sr",
+  "<cmd>lua require('telescope').extensions.live_grep_raw.live_grep_raw()<cr>",
+  opts,
+  "Editor",
+  "search_text_raw",
+  "Search text raw"
+)
+
+mappings.map(
+  "n",
+  "<leader>gt",
+  "<cmd>lua require'agitator'.git_time_machine()<cr>",
+  opts,
+  "Editor",
+  "git_time_machine",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gB",
+  "<cmd>lua require'agitator'.git_blame_toggle()<cr>",
+  opts,
+  "Editor",
+  "git_blame",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gf",
+  "<cmd>lua require'agitator'.open_file_git_branch()<cr>",
+  opts,
+  "Editor",
+  "open_file_git_branch",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gd",
+  "<cmd>lua require'diffview'.open()<cr>",
+  opts,
+  "Editor",
+  "diffview",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gL",
+  "<cmd>lua require'diffview'.file_history('.')<cr>",
+  opts,
+  "Editor",
+  "project_history",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gT",
+  "<cmd>lua require'diffview'.file_history()<cr>",
+  opts,
+  "Editor",
+  "file_history",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gg",
+  "<cmd>Neogit<cr>",
+  opts,
+  "Editor",
+  "neogit",
+  "Open project"
+)
+
+mappings.map(
+  "n",
+  "<leader>?",
+  --":b#<bar>bd#<CR>",
+  ":Cheat40<cr>",
+  opts,
+  "Editor",
+  "help",
+  "help"
+)
+
+-- https://stackoverflow.com/a/19619038/516188
+-- if that doesn't cut it, consider https://github.com/qpkorr/vim-bufkill
+-- and check https://www.reddit.com/r/vim/comments/m6jl0b/i_made_a_plugin_a_replacement_for_bdelete_that/
+mappings.map(
+  "n",
+  "<leader>bd",
+  --":b#<bar>bd#<CR>",
+  ":BD<cr>",
+  opts,
+  "Editor",
+  "delete_buffer",
+  "Delete buffer"
+)
+
+mappings.map(
+  "n",
+  "<leader>td",
+  ":tabc<cr>",
+  opts,
+  "Editor",
+  "delete_tab",
+  "Delete tab"
+)
+
+mappings.map(
+  "n",
+  "<leader>sS",
+  "<cmd>Telescope lsp_workspace_symbols<CR>",
+  opts,
+  "LSP",
+  "lsp_w_symbols",
+  "Goto workspace symbol"
+)
+
+ vim.api.nvim_exec([[
+function! ToggleQuickFix()
+    if empty(filter(getwininfo(), 'v:val.quickfix'))
+        copen
+    else
+        cclose
+    endif
+endfunction
+ ]], false)
+
+mappings.map(
+  "n",
+  "<leader>oq",
+  ":call ToggleQuickFix()<cr>",
+  opts,
+  "Editor",
+  "toggle_quickfix",
+  "Toggle quickfix"
+)
+
+mappings.map(
+  "n",
+  "<leader>clf",
+  ":TroubleToggle lsp_references<cr>",
+  opts,
+  "Editor",
+  "toggle_lsp_refs",
+  "Toggle lsp references"
+)
+
+mappings.map(
+  "n",
+  "<leader>gG",
+  ":lua require('diffview').open()<cr>",
+  opts,
+  "Editor",
+  "git_diff_twoway",
+  "Git two-way diff"
+)
+
+mappings.map(
+  "n",
+  "<leader>fp",
+  -- ':let @+ = expand("%")<cr>',
+  ':lua copy_to_clipboard(cur_file_path_in_project())<cr>',
+  opts,
+  "Editor",
+  "copy_file_path",
+  "Copy file path"
+)
+
+mappings.map(
+  "n",
+  "<leader>fP",
+  ':let @+ = expand("%:p")<cr>',
+  opts,
+  "Editor",
+  "copy_file_full_path",
+  "Copy file full path"
+)
+
+mappings.map(
+  "n",
+  "<leader>cf",
+  ":Format<cr>",
+  opts,
+  "Editor",
+  "code_format",
+  "Code format"
+)
+mappings.map(
+  "n",
+  "<leader>cm",
+  ":Glow<cr>",
+  opts,
+  "Editor",
+  "markdown_preview",
+  "Markdown preview"
+)
+mappings.map(
+  "n",
+  "<leader>wr",
+  "<C-w>r",
+  opts,
+  "Editor",
+  "window_rotate",
+  "Window rotate"
+)
+mappings.map(
+  "n",
+  "<leader>wm",
+  "<C-w>o",
+  opts,
+  "Editor",
+  "window_maximize",
+  "Window maximize"
+)
+mappings.map(
+  "n",
+  "<leader>tw",
+  ":set wrap! linebreak<cr>",
+  opts,
+  "Editor",
+  "toggle_linebreak",
+  "toggle_linebreak"
+)
+mappings.map(
+  "n",
+  "<leader>gm",
+  ":MergetoolToggle<cr>",
+  opts,
+  "Editor",
+  "toggle_gitmerge",
+  "toggle_gitmerge"
+)
+mappings.map(
+  "n",
+  "<leader>gv",
+  ":lua ShowCommitAtLine()<cr>",
+  opts,
+  "Editor",
+  "view_commit",
+  "view_commit"
+)
+mappings.map(
+  "n",
+  "<leader>fW",
+  ":noautocmd w<cr>",
+  opts,
+  "Editor",
+  "save_noindent",
+  "save_noindent"
+)
+mappings.map(
+  "n",
+  "<leader>ctf",
+  ":TestFile -strategy=dispatch<cr>",
+  opts,
+  "Editor",
+  "test file",
+  "test file"
+)
+mappings.map(
+  "n",
+  "<leader>ctn",
+  ":TestNearest -strategy=dispatch<cr>",
+  opts,
+  "Editor",
+  "test nearest",
+  "test nearest"
+)
+mappings.map(
+  "n",
+  "<leader>ctl",
+  ":TestLast -strategy=dispatch<cr>",
+  opts,
+  "Editor",
+  "test last",
+  "test last"
+)
+mappings.map(
+  "n",
+  "<leader>cta",
+  ":TestSuite -strategy=dispatch<cr>",
+  opts,
+  "Editor",
+  "test all",
+  "test all"
+)
+mappings.map(
+  "n",
+  "<leader>cqs",
+  ":lua select_current_qf(false)<cr>",
+  opts,
+  "Editor",
+  "quickfix select current",
+  "quickfix select current"
+)
+mappings.map(
+  "n",
+  "<leader>cqv",
+  ":lua select_current_qf(true)<cr>",
+  opts,
+  "Editor",
+  "quickfix view & select current",
+  "quickfix view & select current"
+)
+mappings.map(
+  "n",
+  "<leader>gY",
+  ":lua copy_file_line()<cr>",
+  opts,
+  "Editor",
+  "Copy line and line number",
+  "Copy line and line number"
+)
+mappings.map(
+  "v",
+  "<leader>gY",
+  ":lua copy_file_line_sel()<cr>",
+  opts,
+  "Editor",
+  "Copy line and line number",
+  "Copy line and line number"
+)
+mappings.map(
+  "n",
+  "<leader>oc",
+  ":lua goto_fileline()<cr>",
+  opts,
+  "Editor",
+  "Open code (file+line)",
+  "Open code (file+line)"
+)
diff --git a/lua/doom/extras/keybindings/movement.lua b/lua/doom/extras/keybindings/movement.lua
index fc3b63f..207ad9f 100644
--- a/lua/doom/extras/keybindings/movement.lua
+++ b/lua/doom/extras/keybindings/movement.lua
@@ -4,7 +4,7 @@ local mappings = require("doom.utils.mappings")
 local opts = { silent = true }
 
 -- TAB to cycle buffers too, why not?
-mappings.map("n", "<Tab>", ":bnext<CR>", opts, "Movement", "cycle_next_buffer", "Goto next buffer")
+-- mappings.map("n", "<Tab>", ":bnext<CR>", opts, "Movement", "cycle_next_buffer", "Goto next buffer")
 mappings.map(
   "n",
   "<S-Tab>",
@@ -165,3 +165,12 @@ mappings.map(
   "resize_left",
   "Resize window (increase height)"
 )
+mappings.map(
+  "n",
+  "<leader><tab>",
+  '<cmd>e #<CR>',
+  opts,
+  "Buffer",
+  "switch_buffer2",
+  "Switch buffer 2"
+)
diff --git a/lua/doom/modules/config/doom-blankline.lua b/lua/doom/modules/config/doom-blankline.lua
index b23bc58..a8fc7d4 100644
--- a/lua/doom/modules/config/doom-blankline.lua
+++ b/lua/doom/modules/config/doom-blankline.lua
@@ -3,10 +3,13 @@ return function()
 
   require("indent_blankline").setup({
     enabled = config.doom.show_indent,
-    char = "│",
+    char = "",
+    context_char = "│",
     -- If treesitter plugin is enabled then use its indentation
     use_treesitter = require("doom.utils").check_plugin("nvim-treesitter", "opt"),
     show_first_indent_level = false,
+    show_current_context = true,
+    show_current_context_start = true,
     filetype_exclude = { "help", "dashboard", "packer", "norg", "DoomInfo" },
     buftype_exclude = { "terminal" },
   })
diff --git a/lua/doom/modules/config/doom-cmp.lua b/lua/doom/modules/config/doom-cmp.lua
index 43302d2..4caf2c3 100644
--- a/lua/doom/modules/config/doom-cmp.lua
+++ b/lua/doom/modules/config/doom-cmp.lua
@@ -83,7 +83,7 @@ return function()
       ["<C-e>"] = cmp.mapping.close(),
       -- ["<ESC>"] = cmp.mapping.close(),
       ["<CR>"] = cmp.mapping.confirm({
-        behavior = cmp.ConfirmBehavior.Replace,
+        behavior = cmp.ConfirmBehavior.Insert,
         select = true,
       }),
       ["<Tab>"] = cmp.mapping(function(fallback)
diff --git a/lua/doom/modules/config/doom-lsp-installer.lua b/lua/doom/modules/config/doom-lsp-installer.lua
index 0d05a54..d20c277 100644
--- a/lua/doom/modules/config/doom-lsp-installer.lua
+++ b/lua/doom/modules/config/doom-lsp-installer.lua
@@ -92,8 +92,13 @@ return function()
     },
   }
 
+  -- https://github.com/jose-elias-alvarez/null-ls.nvim/discussions/244
+  -- https://github.com/jose-elias-alvarez/null-ls.nvim/wiki/Avoiding-LSP-formatting-conflicts
+  local on_attach -- = function(client)
+  --     client.resolved_capabilities.document_formatting = false
+  --     client.resolved_capabilities.document_range_formatting = false
+  -- end
   --- Intelligent highlighting of word under cursor
-  local on_attach
   if not is_plugin_disabled("illuminated") and packer_plugins["vim-illuminate"] then
     on_attach = function(client)
       require("illuminate").on_attach(client)
@@ -165,6 +170,21 @@ return function()
           end
         end
       end
+
+local null_ls = require("null-ls")
+null_ls.config({ 
+    -- debug=true, 
+    sources = {
+    null_ls.builtins.diagnostics.eslint,
+    -- null_ls.builtins.diagnostics.credo,
+    -- null_ls.builtins.diagnostics.shellcheck,
+    -- null_ls.builtins.formatting.prettier,
+    -- null_ls.builtins.formatting.rustfmt,
+    -- null_ls.builtins.formatting.mix,
+    -- null_ls.builtins.formatting.eslint,
+}})
+
+        require("lspconfig")["null-ls"].setup({})
     end
 
     -- Flatten the array of default servers.
diff --git a/lua/doom/modules/config/doom-telescope.lua b/lua/doom/modules/config/doom-telescope.lua
index 06e0b1e..432dbe8 100644
--- a/lua/doom/modules/config/doom-telescope.lua
+++ b/lua/doom/modules/config/doom-telescope.lua
@@ -6,6 +6,7 @@ return function()
 
   telescope.setup({
     defaults = {
+      path_display = {'truncate'},
       find_command = {
         "rg",
         "--no-heading",
@@ -18,7 +19,8 @@ return function()
       selection_strategy = "reset",
       sorting_strategy = "descending",
       layout_strategy = "horizontal",
-      prompt_prefix = "   ",
+      -- prompt_prefix = "   ",
+      prompt_prefix = "", -- work around bugs https://github.com/nvim-telescope/telescope.nvim/issues/1251 https://github.com/nvim-telescope/telescope.nvim/issues/567
       selection_caret = " ",
       layout_config = {
         width = 0.75,
@@ -62,6 +64,8 @@ return function()
           ["<C-q>"] = actions.smart_send_to_qflist + actions.open_qflist,
           ["<Leader>f"] = actions.close, -- works like a toggle, sometimes can be buggy
           ["<CR>"] = actions.select_default + actions.center,
+          ["<C-n>"] = actions.cycle_history_next,
+          ["<C-p>"] = actions.cycle_history_prev,
         },
         n = {
           ["<C-j>"] = actions.move_selection_next,
diff --git a/lua/doom/modules/config/doom-tree.lua b/lua/doom/modules/config/doom-tree.lua
index 62ccf80..1755203 100644
--- a/lua/doom/modules/config/doom-tree.lua
+++ b/lua/doom/modules/config/doom-tree.lua
@@ -32,6 +32,11 @@ return function()
   -- 1000 means the tree can be refresh once per 1000ms.
   vim.g.nvim_tree_refresh_wait = 500
 
+  -- trying to get the same numbers as vim-choosewin.
+  -- there i get digits, but since that one includes the nvim-tree
+  -- window, i start at 2 (since for vim-choosewin, the nvim-tree window is 1)
+  vim.g.nvim_tree_window_picker_chars = '234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+
   -- Ignored filetypes and buffers when window picker is enabled
   vim.g.nvim_tree_window_picker_exclude = {
     filetype = {
@@ -143,32 +148,43 @@ return function()
       mappings = {
         -- custom only false will merge the list with the default mappings
         -- if true, it will only use your list to set the mappings
-        custom_only = false,
+        custom_only = true, -- MY CHANGE
         -- list of mappings to set on the tree manually
         list = {
-          { key = { "o", "<2-LeftMouse>" }, cb = tree_cb("edit") },
-          { key = { "<CR>", "<2-RightMouse>", "<C-]>" }, cb = tree_cb("cd") },
-          { key = "<C-v>", cb = tree_cb("vsplit") },
-          { key = "<C-x>", cb = tree_cb("split") },
-          { key = "<C-t>", cb = tree_cb("tabnew") },
-          { key = "<BS>", cb = tree_cb("close_node") },
-          { key = "<S-CR>", cb = tree_cb("close_node") },
-          { key = "<Tab>", cb = tree_cb("preview") },
-          { key = "I", cb = tree_cb("toggle_ignored") },
-          { key = "H", cb = tree_cb("toggle_dotfiles") },
-          { key = "R", cb = tree_cb("refresh") },
-          { key = "a", cb = tree_cb("create") },
-          { key = "d", cb = tree_cb("remove") },
-          { key = "r", cb = tree_cb("rename") },
-          { key = "<C-r>", cb = tree_cb("full_rename") },
-          { key = "x", cb = tree_cb("cut") },
-          { key = "c", cb = tree_cb("copy") },
-          { key = "p", cb = tree_cb("paste") },
-          { key = "[c", cb = tree_cb("prev_git_item") },
-          { key = "]c", cb = tree_cb("next_git_item") },
-          { key = "-", cb = tree_cb("dir_up") },
-          { key = "q", cb = tree_cb("close") },
-          { key = "g?", cb = tree_cb("toggle_help") },
+            { key = {"<CR>", "o", "<2-LeftMouse>"}, cb = tree_cb("edit") },
+            { key = {"<2-RightMouse>", "<C-]>"},    cb = tree_cb("cd") },
+            { key = "<C-v>",                        cb = tree_cb("vsplit") },
+            { key = "<C-x>",                        cb = tree_cb("split") },
+            { key = "<C-t>",                        cb = tree_cb("tabnew") },
+            { key = "<",                            cb = tree_cb("prev_sibling") },
+            { key = ">",                            cb = tree_cb("next_sibling") },
+            { key = "P",                            cb = tree_cb("parent_node") },
+            { key = "<BS>",                         cb = tree_cb("close_node") },
+            { key = "<Tab>",                        cb = tree_cb("preview") },
+            { key = "K",                            cb = tree_cb("first_sibling") },
+            { key = "J",                            cb = tree_cb("last_sibling") },
+            { key = "I",                            cb = tree_cb("toggle_ignored") },
+            { key = "H",                            cb = tree_cb("toggle_dotfiles") },
+            { key = "R",                            cb = tree_cb("refresh") },
+            { key = "a",                            cb = tree_cb("create") },
+            { key = "d",                            cb = tree_cb("remove") },
+            { key = "D",                            cb = tree_cb("trash") },
+            { key = "r",                            cb = tree_cb("rename") },
+            { key = "<C-r>",                        cb = tree_cb("full_rename") },
+            { key = "x",                            cb = tree_cb("cut") },
+            { key = "c",                            cb = tree_cb("copy") },
+            { key = "p",                            cb = tree_cb("paste") },
+            { key = "y",                            cb = tree_cb("copy_name") },
+            { key = "Y",                            cb = tree_cb("copy_path") },
+            { key = "gy",                           cb = tree_cb("copy_absolute_path") },
+            { key = "[c",                           cb = tree_cb("prev_git_item") },
+            { key = "]c",                           cb = tree_cb("next_git_item") },
+            { key = "s",                            cb = tree_cb("system_open") },
+            { key = "q",                            cb = tree_cb("close") },
+            { key = "g?",                           cb = tree_cb("toggle_help") },
+            -- I want - for vim-choosewin
+            { key = "U", cb = tree_cb("dir_up") },
+            -- { key = "-",                            cb = tree_cb("dir_up") },
         },
       },
     },
diff --git a/lua/doom/modules/config/doom-treesitter.lua b/lua/doom/modules/config/doom-treesitter.lua
index 99ff913..b2a2f30 100644
--- a/lua/doom/modules/config/doom-treesitter.lua
+++ b/lua/doom/modules/config/doom-treesitter.lua
@@ -16,15 +16,20 @@ return function()
         table.insert(langs, "yaml")
         table.insert(langs, "toml")
       else
-        lang = lang:gsub("%s+%+lsp(%(%a+%))", ""):gsub("%s+%+lsp", ""):gsub("%s+%+debug", "")
-        table.insert(langs, lang)
+        -- WORKAROUND: don't install tree-sitter for typescript as it causes issues
+        -- for me on 0.5.1
+        lang = lang:gsub("%s+%+lsp(%(%a+%))", ""):gsub("%s+%+lsp", ""):gsub("%s+%+debug", ""):gsub("typescript", ""):gsub("norg", ""):gsub("%s+", "")
+        if lang ~= "" then
+            print ("installing for " .. lang)
+          table.insert(langs, lang)
+        end
       end
     end
 
     -- Add TSX parser if TypeScript is enabled
-    if has_value(langs, "typescript") then
-      table.insert(langs, "tsx")
-    end
+    -- if has_value(langs, "typescript") then
+    --   table.insert(langs, "tsx")
+    -- end
     return langs
   end
 
@@ -51,7 +56,7 @@ return function()
     autopairs = {
       enable = is_plugin_disabled("autopairs") and false or true,
     },
-    indent = { enable = true },
+    indent = { enable = false },
     playground = { enable = true },
     tree_docs = { enable = true },
     context_commentstring = { enable = true },
@@ -61,14 +66,14 @@ return function()
         "html",
         "javascript",
         "javascriptreact",
-        "typescript",
-        "typescriptreact",
         "svelte",
         "vue",
         "markdown",
       },
     },
   })
+        -- "typescript",
+        -- "typescriptreact",
 
   --  Check if user is using clang and notify that it has poor compatibility with treesitter
   --  WARN: 19/11/2021 | issues: #222, #246 clang compatibility could improve in future
diff --git a/lua/doom/modules/config/doom-trouble.lua b/lua/doom/modules/config/doom-trouble.lua
index 829285b..6bad9e1 100644
--- a/lua/doom/modules/config/doom-trouble.lua
+++ b/lua/doom/modules/config/doom-trouble.lua
@@ -1,7 +1,9 @@
 return function()
-  require("trouble").setup({
-    -- your configuration comes here
-    -- or leave it empty to use the default settings
-    -- refer to the configuration section below
-  })
+    require("trouble").setup({
+        -- your configuration comes here
+        -- or leave it empty to use the default settings
+        -- refer to the configuration section below
+        position = 'left',
+        auto_preview = false,
+    })
 end
diff --git a/lua/doom/modules/config/doom-whichkey.lua b/lua/doom/modules/config/doom-whichkey.lua
index e6f6331..a07ada2 100644
--- a/lua/doom/modules/config/doom-whichkey.lua
+++ b/lua/doom/modules/config/doom-whichkey.lua
@@ -72,6 +72,8 @@ return function()
     ["."] = { "Browse files" },
     [","] = { "Switch buffer" },
     ["/"] = { "Search a word" },
+    ["*"] = { "Search word under cursor" }, -- mine
+    ["?"] = { "Cheat40" }, -- mine
     [":"] = { "Command history" },
     ["h"] = { "Manpage" },
     ["m"] = { "Save" },
@@ -86,6 +88,8 @@ return function()
       ["g"] = { "Goto buffer" },
       ["["] = { "Previous buffer" },
       ["p"] = { "Previous buffer" },
+      -- mine
+      ["d"] = { "Delete buffer" },
     },
     ["c"] = {
       name = "+code",
@@ -96,6 +100,10 @@ return function()
       ["h"] = {
         "Run restclient on the line that the cursor is currently on",
       },
+      -- mine
+      ["f"] = { "Format code" },
+      ["m"] = { "Preview markdown" },
+      -- end mine
       ["d"] = {
         name = "+debug",
         ["b"] = { "Toggle breakpoint on current line" },
@@ -112,6 +120,21 @@ return function()
         ["l"] = { "Show line diagnostics" },
         ["q"] = { "Diagnostics into location list" },
         ["r"] = { "Rename symbol under cursor" },
+        -- mine
+        ["f"] = { "LSP reFerences" },
+      },
+      -- mine
+      ["t"] = {
+        name = '+test',
+        ["f"] = { "Test file" },
+        ["n"] = { "Test nearest" },
+        ["l"] = { "Test last" },
+        ["a"] = { "Test all" },
+      },
+      ["q"] = {
+        name = '+quickfix',
+        ["s"] = { "Select current" },
+        ["v"] = { "View current" },
       },
     },
     ["d"] = {
@@ -135,6 +158,10 @@ return function()
       ["r"] = { "Recently opened files" },
       ["w"] = { "Write file with sudo permissions" },
       ["R"] = { "Re-open file with sudo permissions" },
+      -- mine
+      ["p"] = { "Copy file relative path" },
+      ["P"] = { "Copy file full path" },
+      ["W"] = { "Save without indenting" },
     },
     ["g"] = {
       name = "+git",
@@ -150,6 +177,18 @@ return function()
       ["b"] = { "Blame line" },
       ["B"] = { "Branches" },
       ["c"] = { "Commits" },
+      -- mine
+      ["t"] = { "Agitator Time machine" },
+      ["B"] = { "Agitator Blame" },
+      ["f"] = { "Agitator open file branch" },
+      ["d"] = { "Diffview" },
+      ["G"] = { "Diffview" },
+      ["L"] = { "Diffview history" },
+      ["T"] = { "Diffview file history" },
+      ["g"] = { "Neogit" },
+      ["m"] = { "Git merge" },
+      ["v"] = { "View commit for cur line" },
+      ["y"] = { "Copy repo web URL" },
     },
     ["p"] = {
       name = "+plugins",
@@ -173,6 +212,9 @@ return function()
       ["s"] = { "Goto symbol" },
       ["h"] = { "Command history" },
       ["m"] = { "Jump to mark" },
+      -- mine
+      ["r"] = { "Raw" },
+      ["S"] = { "Workspace symbols" },
     },
     ["t"] = {
       name = "+tweak",
@@ -184,6 +226,9 @@ return function()
       -- ["p"] = { "autopairs" }, -- moved below as conditional
       ["s"] = { "spell" },
       ["x"] = { "syntax/treesetter" },
+      -- mine
+      ["d"] = { "Tab delete" },
+      ["w"] = { "Toggle Linebreak" },
     },
     ["w"] = {
       name = "+windows",
@@ -203,6 +248,9 @@ return function()
       ["="] = { "Balance window" },
       ["s"] = { "Split window below" },
       ["v"] = { "Split window right" },
+      -- mine
+      ["r"] = { "Window Rotate" }, 
+      ["m"] = { "Window Maximize" }, 
     },
     ["o"] = {
       name = "+open",
@@ -213,6 +261,10 @@ return function()
       ["m"] = { "Minimap" },
       ["s"] = { "Symbols" },
       ["t"] = { "Terminal" },
+      -- MINE
+      ["p"] = { "Project" },
+      ["q"] = { "Quickfix" },
+      ["c"] = { "Code file line" },
     },
     ["j"] = {
       name = "+jumps",
diff --git a/lua/doom/modules/init.lua b/lua/doom/modules/init.lua
index d092bc0..d63edb6 100644
--- a/lua/doom/modules/init.lua
+++ b/lua/doom/modules/init.lua
@@ -154,6 +154,7 @@ packer.startup(function(use)
       "NvimTreeClipboard",
       "NvimTreeClose",
       "NvimTreeFindFile",
+      "NvimTreeFindFileToggle",
       "NvimTreeOpen",
       "NvimTreeRefresh",
       "NvimTreeToggle",
@@ -173,8 +174,10 @@ packer.startup(function(use)
   -- can be disabled to use your own statusline
   local disabled_statusline = is_plugin_disabled("statusline")
   use({
-    "NTBBloodbath/galaxyline.nvim",
-    commit = pin_commit("7b812cfddfcac7d9031e2f8e03f2b71fe8b2558d"),
+    -- "NTBBloodbath/galaxyline.nvim",
+    -- commit = pin_commit("7b812cfddfcac7d9031e2f8e03f2b71fe8b2558d"),
+    "emmanueltouzery/galaxyline.nvim",
+    branch = "doom-branch-patched",
     config = require("doom.modules.config.doom-eviline"),
     disable = disabled_statusline,
   })
@@ -349,8 +352,8 @@ packer.startup(function(use)
   -- Neogit
   local disabled_neogit = is_plugin_disabled("neogit")
   use({
-    "TimUntersberger/neogit",
-    commit = pin_commit("ab772d21b108127ad6c703f7457c279f5817f379"),
+    "emmanueltouzery/neogit",
+    branch = "delete_path",
     config = function()
       require("neogit").setup({})
     end,

diff --git a/lua/doom/core/settings/init.lua b/lua/doom/core/settings/init.lua
index ac95600..2523964 100644
--- a/lua/doom/core/settings/init.lua
+++ b/lua/doom/core/settings/init.lua
@@ -30,7 +30,7 @@ settings.load_default_options = function()
   vim.opt.inccommand = "split"
   vim.opt.path = "**"
   vim.opt.signcolumn = "auto:2-3"
-  vim.opt.foldcolumn = "auto:9"
+  -- vim.opt.foldcolumn = "auto:9"
 
   vim.opt.fillchars = {
     vert = "▕",
diff --git a/lua/doom/extras/keybindings/leader.lua b/lua/doom/extras/keybindings/leader.lua
index 7fd5b51..4b8bdd2 100644
--- a/lua/doom/extras/keybindings/leader.lua
+++ b/lua/doom/extras/keybindings/leader.lua
@@ -62,7 +62,7 @@ mappings.map(
 mappings.map(
   "n",
   "<leader>.",
-  "<cmd>Telescope file_browser<CR>",
+  "<cmd>Telescope file_browser hidden=true<CR>",
   opts,
   "Editor",
   "file_browser",
@@ -322,7 +322,7 @@ mappings.map(
 mappings.map(
   "n",
   "<leader>ff",
-  "<cmd>Telescope find_files<CR>",
+  "<cmd>Telescope find_files hidden=true<CR>",
   opts,
   "Editor",
   "find_files_alt",
@@ -592,7 +592,9 @@ if not config.doom.use_netrw then
   mappings.map(
     "n",
     "<leader>oe",
-    "<cmd>NvimTreeToggle<CR>",
+    "<cmd>lua toggle_tree()<cr>",
+    -- "<cmd>NvimTreeToggle<CR>",
+    -- "<cmd>NvimTreeToggle<CR>",
     opts,
     "Editor",
     "open_tree_alt",
@@ -856,3 +858,207 @@ mappings.map("n", "<leader>m", "<cmd>w<cr>", opts, "Save", "save_right", "Save m
 
 -- man pages
 mappings.map("n", "<leader>h", ":Man ", { silent = false }, "Man page", "man_page", "Man page")
+
+-- MINE
+mappings.map(
+  "n",
+  "<leader>op",
+  "<cmd>lua require'telescope'.extensions.project.project{ display_type = 'full' }<CR>",
+  opts,
+  "Editor",
+  "open_project",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>*",
+  "<cmd>lua my_open_tele()<cr>",
+  opts,
+  "Editor",
+  "search_word",
+  "Search word under cursor, raw"
+)
+mappings.map(
+  "n",
+  "<leader>sr",
+  "<cmd>lua require('telescope').extensions.live_grep_raw.live_grep_raw()<cr>",
+  opts,
+  "Editor",
+  "search_text_raw",
+  "Search text raw"
+)
+
+mappings.map(
+  "n",
+  "<leader>gt",
+  "<cmd>lua require'agitator'.git_time_machine()<cr>",
+  opts,
+  "Editor",
+  "git_time_machine",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gB",
+  "<cmd>lua require'agitator'.git_blame_toggle()<cr>",
+  opts,
+  "Editor",
+  "git_blame",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gf",
+  "<cmd>lua require'agitator'.open_file_git_branch()<cr>",
+  opts,
+  "Editor",
+  "open_file_git_branch",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gd",
+  "<cmd>lua require'diffview'.open()<cr>",
+  opts,
+  "Editor",
+  "diffview",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gL",
+  "<cmd>lua require'diffview'.file_history('.')<cr>",
+  opts,
+  "Editor",
+  "project_history",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gT",
+  "<cmd>lua require'diffview'.file_history()<cr>",
+  opts,
+  "Editor",
+  "file_history",
+  "Open project"
+)
+mappings.map(
+  "n",
+  "<leader>gg",
+  "<cmd>Neogit<cr>",
+  opts,
+  "Editor",
+  "neogit",
+  "Open project"
+)
+
+-- https://stackoverflow.com/a/19619038/516188
+-- if that doesn't cut it, consider https://github.com/qpkorr/vim-bufkill
+mappings.map(
+  "n",
+  "<leader>bd",
+  ":b#<bar>bd#<CR>",
+  opts,
+  "Editor",
+  "delete_buffer",
+  "Delete buffer"
+)
+
+mappings.map(
+  "n",
+  "<leader>td",
+  ":tabc<cr>",
+  opts,
+  "Editor",
+  "delete_tab",
+  "Delete tab"
+)
+
+mappings.map(
+  "n",
+  "<leader>sS",
+  "<cmd>Telescope lsp_workspace_symbols<CR>",
+  opts,
+  "LSP",
+  "lsp_w_symbols",
+  "Goto workspace symbol"
+)
+
+ vim.api.nvim_exec([[
+function! ToggleQuickFix()
+    if empty(filter(getwininfo(), 'v:val.quickfix'))
+        copen
+    else
+        cclose
+    endif
+endfunction
+ ]], false)
+
+mappings.map(
+  "n",
+  "<leader>oq",
+  ":call ToggleQuickFix()<cr>",
+  opts,
+  "Editor",
+  "toggle_quickfix",
+  "Toggle quickfix"
+)
+
+mappings.map(
+  "n",
+  "<leader>clf",
+  ":TroubleToggle lsp_references<cr>",
+  opts,
+  "Editor",
+  "toggle_lsp_refs",
+  "Toggle lsp references"
+)
+
+mappings.map(
+  "n",
+  "<leader>gG",
+  ":lua require('diffview').open()<cr>",
+  opts,
+  "Editor",
+  "git_diff_twoway",
+  "Git two-way diff"
+)
+
+mappings.map(
+  "n",
+  "<leader>fp",
+  ':let @+ = expand("%")<cr>',
+  opts,
+  "Editor",
+  "copy_file_path",
+  "Copy file path"
+)
+
+mappings.map(
+  "n",
+  "<leader>fP",
+  ':let @+ = expand("%:p")<cr>',
+  opts,
+  "Editor",
+  "copy_file_full_path",
+  "Copy file full path"
+)
+
+mappings.map(
+  "n",
+  "<leader>cf",
+  ":Format<cr>",
+  opts,
+  "Editor",
+  "code_format",
+  "Code format"
+)
+mappings.map(
+  "n",
+  "<leader>cm",
+  ":Glow<cr>",
+  opts,
+  "Editor",
+  "markdown_preview",
+  "Markdown preview"
+)
diff --git a/lua/doom/extras/keybindings/movement.lua b/lua/doom/extras/keybindings/movement.lua
index fc3b63f..207ad9f 100644
--- a/lua/doom/extras/keybindings/movement.lua
+++ b/lua/doom/extras/keybindings/movement.lua
@@ -4,7 +4,7 @@ local mappings = require("doom.utils.mappings")
 local opts = { silent = true }
 
 -- TAB to cycle buffers too, why not?
-mappings.map("n", "<Tab>", ":bnext<CR>", opts, "Movement", "cycle_next_buffer", "Goto next buffer")
+-- mappings.map("n", "<Tab>", ":bnext<CR>", opts, "Movement", "cycle_next_buffer", "Goto next buffer")
 mappings.map(
   "n",
   "<S-Tab>",
@@ -165,3 +165,12 @@ mappings.map(
   "resize_left",
   "Resize window (increase height)"
 )
+mappings.map(
+  "n",
+  "<leader><tab>",
+  '<cmd>e #<CR>',
+  opts,
+  "Buffer",
+  "switch_buffer2",
+  "Switch buffer 2"
+)
diff --git a/lua/doom/modules/config/doom-blankline.lua b/lua/doom/modules/config/doom-blankline.lua
index b23bc58..a8fc7d4 100644
--- a/lua/doom/modules/config/doom-blankline.lua
+++ b/lua/doom/modules/config/doom-blankline.lua
@@ -3,10 +3,13 @@ return function()
 
   require("indent_blankline").setup({
     enabled = config.doom.show_indent,
-    char = "│",
+    char = "",
+    context_char = "│",
     -- If treesitter plugin is enabled then use its indentation
     use_treesitter = require("doom.utils").check_plugin("nvim-treesitter", "opt"),
     show_first_indent_level = false,
+    show_current_context = true,
+    show_current_context_start = true,
     filetype_exclude = { "help", "dashboard", "packer", "norg", "DoomInfo" },
     buftype_exclude = { "terminal" },
   })
diff --git a/lua/doom/modules/config/doom-telescope.lua b/lua/doom/modules/config/doom-telescope.lua
index 06e0b1e..432dbe8 100644
--- a/lua/doom/modules/config/doom-telescope.lua
+++ b/lua/doom/modules/config/doom-telescope.lua
@@ -6,6 +6,7 @@ return function()
 
   telescope.setup({
     defaults = {
+      path_display = {'truncate'},
       find_command = {
         "rg",
         "--no-heading",
@@ -18,7 +19,8 @@ return function()
       selection_strategy = "reset",
       sorting_strategy = "descending",
       layout_strategy = "horizontal",
-      prompt_prefix = "   ",
+      -- prompt_prefix = "   ",
+      prompt_prefix = "", -- work around bugs https://github.com/nvim-telescope/telescope.nvim/issues/1251 https://github.com/nvim-telescope/telescope.nvim/issues/567
       selection_caret = " ",
       layout_config = {
         width = 0.75,
@@ -62,6 +64,8 @@ return function()
           ["<C-q>"] = actions.smart_send_to_qflist + actions.open_qflist,
           ["<Leader>f"] = actions.close, -- works like a toggle, sometimes can be buggy
           ["<CR>"] = actions.select_default + actions.center,
+          ["<C-n>"] = actions.cycle_history_next,
+          ["<C-p>"] = actions.cycle_history_prev,
         },
         n = {
           ["<C-j>"] = actions.move_selection_next,
diff --git a/lua/doom/modules/config/doom-tree.lua b/lua/doom/modules/config/doom-tree.lua
index 62ccf80..1755203 100644
--- a/lua/doom/modules/config/doom-tree.lua
+++ b/lua/doom/modules/config/doom-tree.lua
@@ -32,6 +32,11 @@ return function()
   -- 1000 means the tree can be refresh once per 1000ms.
   vim.g.nvim_tree_refresh_wait = 500
 
+  -- trying to get the same numbers as vim-choosewin.
+  -- there i get digits, but since that one includes the nvim-tree
+  -- window, i start at 2 (since for vim-choosewin, the nvim-tree window is 1)
+  vim.g.nvim_tree_window_picker_chars = '234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+
   -- Ignored filetypes and buffers when window picker is enabled
   vim.g.nvim_tree_window_picker_exclude = {
     filetype = {
@@ -143,32 +148,43 @@ return function()
       mappings = {
         -- custom only false will merge the list with the default mappings
         -- if true, it will only use your list to set the mappings
-        custom_only = false,
+        custom_only = true, -- MY CHANGE
         -- list of mappings to set on the tree manually
         list = {
-          { key = { "o", "<2-LeftMouse>" }, cb = tree_cb("edit") },
-          { key = { "<CR>", "<2-RightMouse>", "<C-]>" }, cb = tree_cb("cd") },
-          { key = "<C-v>", cb = tree_cb("vsplit") },
-          { key = "<C-x>", cb = tree_cb("split") },
-          { key = "<C-t>", cb = tree_cb("tabnew") },
-          { key = "<BS>", cb = tree_cb("close_node") },
-          { key = "<S-CR>", cb = tree_cb("close_node") },
-          { key = "<Tab>", cb = tree_cb("preview") },
-          { key = "I", cb = tree_cb("toggle_ignored") },
-          { key = "H", cb = tree_cb("toggle_dotfiles") },
-          { key = "R", cb = tree_cb("refresh") },
-          { key = "a", cb = tree_cb("create") },
-          { key = "d", cb = tree_cb("remove") },
-          { key = "r", cb = tree_cb("rename") },
-          { key = "<C-r>", cb = tree_cb("full_rename") },
-          { key = "x", cb = tree_cb("cut") },
-          { key = "c", cb = tree_cb("copy") },
-          { key = "p", cb = tree_cb("paste") },
-          { key = "[c", cb = tree_cb("prev_git_item") },
-          { key = "]c", cb = tree_cb("next_git_item") },
-          { key = "-", cb = tree_cb("dir_up") },
-          { key = "q", cb = tree_cb("close") },
-          { key = "g?", cb = tree_cb("toggle_help") },
+            { key = {"<CR>", "o", "<2-LeftMouse>"}, cb = tree_cb("edit") },
+            { key = {"<2-RightMouse>", "<C-]>"},    cb = tree_cb("cd") },
+            { key = "<C-v>",                        cb = tree_cb("vsplit") },
+            { key = "<C-x>",                        cb = tree_cb("split") },
+            { key = "<C-t>",                        cb = tree_cb("tabnew") },
+            { key = "<",                            cb = tree_cb("prev_sibling") },
+            { key = ">",                            cb = tree_cb("next_sibling") },
+            { key = "P",                            cb = tree_cb("parent_node") },
+            { key = "<BS>",                         cb = tree_cb("close_node") },
+            { key = "<Tab>",                        cb = tree_cb("preview") },
+            { key = "K",                            cb = tree_cb("first_sibling") },
+            { key = "J",                            cb = tree_cb("last_sibling") },
+            { key = "I",                            cb = tree_cb("toggle_ignored") },
+            { key = "H",                            cb = tree_cb("toggle_dotfiles") },
+            { key = "R",                            cb = tree_cb("refresh") },
+            { key = "a",                            cb = tree_cb("create") },
+            { key = "d",                            cb = tree_cb("remove") },
+            { key = "D",                            cb = tree_cb("trash") },
+            { key = "r",                            cb = tree_cb("rename") },
+            { key = "<C-r>",                        cb = tree_cb("full_rename") },
+            { key = "x",                            cb = tree_cb("cut") },
+            { key = "c",                            cb = tree_cb("copy") },
+            { key = "p",                            cb = tree_cb("paste") },
+            { key = "y",                            cb = tree_cb("copy_name") },
+            { key = "Y",                            cb = tree_cb("copy_path") },
+            { key = "gy",                           cb = tree_cb("copy_absolute_path") },
+            { key = "[c",                           cb = tree_cb("prev_git_item") },
+            { key = "]c",                           cb = tree_cb("next_git_item") },
+            { key = "s",                            cb = tree_cb("system_open") },
+            { key = "q",                            cb = tree_cb("close") },
+            { key = "g?",                           cb = tree_cb("toggle_help") },
+            -- I want - for vim-choosewin
+            { key = "U", cb = tree_cb("dir_up") },
+            -- { key = "-",                            cb = tree_cb("dir_up") },
         },
       },
     },
diff --git a/lua/doom/modules/config/doom-treesitter.lua b/lua/doom/modules/config/doom-treesitter.lua
index 99ff913..acbec70 100644
--- a/lua/doom/modules/config/doom-treesitter.lua
+++ b/lua/doom/modules/config/doom-treesitter.lua
@@ -51,7 +51,7 @@ return function()
     autopairs = {
       enable = is_plugin_disabled("autopairs") and false or true,
     },
-    indent = { enable = true },
+    indent = { enable = false },
     playground = { enable = true },
     tree_docs = { enable = true },
     context_commentstring = { enable = true },
diff --git a/lua/doom/modules/config/doom-trouble.lua b/lua/doom/modules/config/doom-trouble.lua
index 829285b..6bad9e1 100644
--- a/lua/doom/modules/config/doom-trouble.lua
+++ b/lua/doom/modules/config/doom-trouble.lua
@@ -1,7 +1,9 @@
 return function()
-  require("trouble").setup({
-    -- your configuration comes here
-    -- or leave it empty to use the default settings
-    -- refer to the configuration section below
-  })
+    require("trouble").setup({
+        -- your configuration comes here
+        -- or leave it empty to use the default settings
+        -- refer to the configuration section below
+        position = 'left',
+        auto_preview = false,
+    })
 end
diff --git a/lua/doom/modules/init.lua b/lua/doom/modules/init.lua
index d092bc0..bcd6c6e 100644
--- a/lua/doom/modules/init.lua
+++ b/lua/doom/modules/init.lua
@@ -154,6 +154,7 @@ packer.startup(function(use)
       "NvimTreeClipboard",
       "NvimTreeClose",
       "NvimTreeFindFile",
+      "NvimTreeFindFileToggle",
       "NvimTreeOpen",
       "NvimTreeRefresh",
       "NvimTreeToggle",
@@ -173,8 +174,10 @@ packer.startup(function(use)
   -- can be disabled to use your own statusline
   local disabled_statusline = is_plugin_disabled("statusline")
   use({
-    "NTBBloodbath/galaxyline.nvim",
-    commit = pin_commit("7b812cfddfcac7d9031e2f8e03f2b71fe8b2558d"),
+    -- "NTBBloodbath/galaxyline.nvim",
+    -- commit = pin_commit("7b812cfddfcac7d9031e2f8e03f2b71fe8b2558d"),
+    "emmanueltouzery/galaxyline.nvim",
+    branch = "doom-branch-patched",
     config = require("doom.modules.config.doom-eviline"),
     disable = disabled_statusline,
   })

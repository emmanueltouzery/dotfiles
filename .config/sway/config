# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/default.png fill
output * bg ~/Dropbox/wallpapers/wallpaper.jpg fill

set $lockwallpaper ~/Dropbox/wallpapers/wallpaper.jpg

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle \
#           timeout 300 'swaylock -i $lockwallpaper --scaling=fill' \
#           timeout 310 'swaymsg "output * dpms off"' \
#                resume 'swaymsg "output * dpms on"' \
#           before-sleep 'swaylock -i $lockwallpaper --scaling=fill'

# exec swayidle -w \
#           timeout 300 'swaylock -i $lockwallpaper --scaling=fill' \
#           timeout 310 'swaymsg "output * dpms off"' \
#                resume 'swaymsg "output * dpms on"' \
#           before-sleep 'swaylock -i $lockwallpaper --scaling=fill'

                #timeout 300 'swaylock -f -c 000000' \
                #before-sleep 'swaylock -f -c 000000'
exec swayidle -w \
                timeout 300 'swaymsg "output * dpms off"' \
                     resume 'swaymsg "output * dpms on"' \
           before-sleep 'swaylock -i $lockwallpaper --scaling=fill'

# no window title if there's only one window in a workspace
# https://www.joshmcguigan.com/blog/hot-take-fedora-gnome-arch-sway/
default_border none
hide_edge_borders --i3 smart

#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input * {
     xkb_layout "si"
     xkb_numlock enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    # bindsym $mod+d exec $menu
    # bindsym $mod+d exec --no-startup-id rofi -show drun -show-icons
    # bindsym $mod+Tab exec --no-startup-id rofi -show window
    # bindsym $mod+Tab exec swaymsg -t get_tree | jq -r '.nodes[].nodes[] | if .nodes then [recurse(.nodes[])] else [] end + .floating_nodes | .[] | select(.nodes==[]) | ((.id | tostring) + "" + .name)' | wofi -i -I --show dmenu | {read -r id name swaymsg "[con_id=$id]" focus}
    bindsym $mod+Tab exec ~/.config/sway/wofi-switch-window.sh
    bindsym $mod+d exec wofi --show drun -I -i -a

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

set $output1 HDMI-A-3
set $output2 eDP-1

    set $ws1 1
    set $ws2 2
    set $ws3 3
    set $ws4 4
    set $ws5 5
    set $ws6 6
    set $ws7 7
    set $ws8 8
    set $ws9 9
    set $ws10 10

    workspace $ws1 output $output1
    workspace $ws2 output $output1
    workspace $ws3 output $output1
    workspace $ws4 output $output1
    workspace $ws5 output $output1
    workspace $ws6 output $output2
    workspace $ws7 output $output2
    workspace $ws8 output $output2
    workspace $ws9 output $output2
    workspace $ws10 output $output2

    # Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Show the projectpad scratchpad window, if any.
    bindsym $mod+p [title="^Projectpad"] scratchpad show

    bindsym $mod+q exec gnome-calculator

# how to find out criteria:
# xprop //for Xwayland
# swaymsg -t get_tree //for wayland

    assign [title="^Skype"] $ws2
    assign [class="^Slack"] $ws2
    assign [class="^discord"] $ws2
    assign [class="^Gimp"] $ws3
    for_window [app_id="projectpad" title="Projectpad"] move scratchpad
    for_window [app_id="gnome-calculator"] floating enable
    for_window [class="VirtualBox Manager"] floating enable
    for_window [title="Remmina Remote Desktop Client"] floating enable

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 30px
    bindsym $down resize grow height 30px
    bindsym $up resize shrink height 30px
    bindsym $right resize grow width 30px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 30px
    bindsym Down resize grow height 30px
    bindsym Up resize shrink height 30px
    bindsym Right resize grow width 30px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

mode "sound" {
        # bindsym k exec "amixer -c 0 set Master -q 5%+; sh ~/.config/sway/display_volume.sh"
        # bindsym j exec "amixer -c 0 set Master -q 5%-; sh ~/.config/sway/display_volume.sh"
        # bindsym m exec "amixer -c 0 -q sset Master,0 toggle; sh ~/.config/sway/display_volume.sh"
        bindsym k exec "pactl set-sink-volume @DEFAULT_SINK@ +5%; sh ~/.config/sway/display_volume.sh"
        bindsym j exec "pactl set-sink-volume @DEFAULT_SINK@ -5%; sh ~/.config/sway/display_volume.sh"
        bindsym m exec "pactl set-sink-mute @DEFAULT_SINK@ toggle; sh ~/.config/sway/display_volume.sh"

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+Shift+s mode "default"
}
bindsym $mod+Shift+s mode "sound"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    # swaybar_command '/home/emmanuel/home/Waybar/build/waybar'
    # swaybar_command 'waybar'
    position bottom

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while ~/.config/sway/swaybar_status.sh; do sleep 10; done

    # bindcode 272 pavucontrol

    # colors {
    #     statusline #ffffff
    #     background #323232
    #     inactive_workspace #32323200 #32323200 #5c5c5c
    # }
}

include /etc/sway/config.d/*

bindsym $mod+Shift+d exec "/home/emmanuel/home/gsimplecal-install/bin/gsimplecal"

# ----- screenshots -----
bindsym --release $mod+Print exec grim -g "$(slurp)" - | wl-copy
bindsym --release $mod+Shift+Print exec grim -g "$(slurp)" ~/Downloads/$(date +'%Y-%m-%d-%H%M%S.png')
bindsym --release $mod+Ctrl+Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') ~/Downloads/$(date +'%Y-%m-%d-%H%M%S.png')
bindsym --release $mod+Ctrl+Shift+Print exec grim ~/Downloads/$(date +'%Y-%m-%d-%H%M%S.png')
# https://www.reddit.com/r/swaywm/comments/bw9m52/how_to_take_a_screenshot_of_currently_active/epwnlti/
bindsym Ctrl+Shift+Print exec swaymsg -t get_tree | jq -r '.. | (.nodes? // empty)[] | if (.focused) then select(.focused) | "\(.rect.x),\(.rect.y) \(.rect.width)x\(.rect.height)" else (.floating_nodes? // empty)[] | select(.visible) | select(.focused) | "\(.rect.x),\(.rect.y) \(.rect.width)x\(.rect.height)" end' | grim -g - - | wl-copy
bindsym $mod+c exec wl-paste | wl-copy
bindsym $mod+Alt+l exec swaylock -i $lockwallpaper --scaling=fill

# https://github.com/flatpak/xdg-desktop-portal/issues/285#issuecomment-665109459

exec systemctl --user import-environment WAYLAND_DISPLAY
exec systemctl --user set-environment XDG_SESSION_TYPE=wayland XDG_CURRENT_DESKTOP=sway MOZ_ENABLE_WAYLAND=1 MOZ_DBUS_REMOTE=1
exec "dbus-update-activation-environment --systemd DISPLAY MOZ_DBUS_REMOTE"
exec /usr/libexec/xdg-desktop-portal-wlr
# exec /usr/libexec/xdg-desktop-portal -r

exec swaymsg titlebar_padding 5 1

exec nm-applet --indicator
exec flatpak run --filesystem=home com.slack.Slack
exec flatpak run --filesystem=home com.discordapp.Discord
exec skypeforlinux
exec flatpak run com.github.emmanueltouzery.projectpad
exec dropbox start
exec mkfifo /tmp/wobpipe && tail -f /tmp/wobpipe | wob

# exec /usr/libexec/polkit-gnome-authentication-agent-1
exec /usr/libexec/xfce-polkit
